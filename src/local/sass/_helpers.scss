@import "../../../bower_components/office-ui-fabric/dist/sass/Fabric.Common";

// OneDrive theme colors
$color-themeDarker: "[theme:themeDarker, default:#052a65]";           // white text is accessible
$color-themeDark: "[theme:themeDark, default:#07288b]";               // white text is accessible
$color-themePrimary: "[theme:themePrimary, default:#094AB2]";         // white text is accessible
$color-themeSecondary: "[theme:themeSecondary, default:#2f69c0]";     // white text is borderline accessible
$color-themeTertiary: "[theme:themeTertiary, default:#88bded]";       // NeutralPrimary text is borderline accessible
$color-themeTertiaryAlt: "[theme:themeTertiaryAlt, default:#9ccbf0]"; // NeutralPrimary text is accessible
$color-themeLight: "[theme:themeLight, default:#a8d1ef]";             // NeutralPrimary text is accessible
$color-themeLightAlt: "[theme:themeLightAlt, default:#beddf4]";       // NeutralPrimary text is accessible
$color-themeLighter: "[theme:themeLighter, default:#d7eaf9]";         // NeutralPrimary text is accessible
$color-themeLighterAlt: "[theme:themeLighterAlt, default:#e6f2fb]";   // NeutralPrimary text is accessible
$color-themeAccent: "[theme:themeAccent, default:#3a96dd]";           // not accessible
$color-themeAccentDefault: #3a96dd;                                 // Temporary slot until we allow functions on annotations
$color-themeNeutral: "[theme:themeAccent, default:#364249]";

// miscellaneous item specific colors
$od-color-focus: $ms-color-neutralSecondaryAlt;

// Mixins
@mixin user-select ($val) {
    -webkit-touch-callout:  $val;
    -webkit-user-select:    $val;
    -khtml-user-select:     $val;
    -moz-user-select:       $val;
    -ms-user-select:        $val;
    user-select:            $val;
}

@mixin transform ($val) {
    -webkit-transform:      $val;
    -ms-transform:          $val;
    transform:              $val;
}

// Dark transparent colors
$darkTransparentSelector: '.od-theme--darkTransparent';

// A mixin that will add in the given rule set for the darkTransparent theme
@mixin darkTransparent {
    #{$darkTransparentSelector} & {
        @content;
    }
}

/** The following mixins are to be used only in cases where a control may need to be
    displayed in multiple theme variations. Do not use these in other cases as it will
    unnecessarily bloat the outputted CSS files. */
@mixin theme-background($rule) {
    & {
        #{$rule}: $color-themePrimary;
    }

    #{$darkTransparentSelector} & {
        #{$rule}: $color-themeDarkTransparentBackground;
    }
}