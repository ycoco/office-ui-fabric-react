import { ITheme as theme } from '@microsoft/load-themed-styles';

export interface ITheme {
  name: string;
  theme?: IThemeColors;
  isInverted?: boolean;
  backgroundImageUri?: string;
}

export interface IThemeColors extends theme {
  primaryColor?: string;
  primaryColorShade1?: string;
  primaryColorShade2?: string;
  primaryColorShade3?: string;
  primaryColorShade4?: string;
  primaryColorShade5?: string;
  primaryColorShade6?: string;
  primaryColorShade7?: string;
  primaryColorShade8?: string;
  backgroundColor?: string;
  backgroundColorShade1?: string;
  backgroundColorShade2?: string;
  backgroundColorShade3?: string;
  backgroundColorShade4?: string;
  backgroundColorShade5?: string;
  backgroundColorShade6?: string;
  backgroundColorShade7?: string;
  backgroundColorShade8?: string;
  foregroundColor?: string;
  foregroundColorShade1?: string;
  foregroundColorShade2?: string;
  foregroundColorShade3?: string;
  foregroundColorShade4?: string;
  foregroundColorShade5?: string;
  foregroundColorShade6?: string;
  foregroundColorShade7?: string;
  foregroundColorShade8?: string;
  themePrimary?: string;
  themeLighterAlt?: string;
  themeLighter?: string;
  themeLight?: string;
  themeTertiary?: string;
  themeSecondary?: string;
  themeDarkAlt?: string;
  themeDark?: string;
  themeDarker?: string;
  neutralLighterAlt?: string;
  neutralLighter?: string;
  neutralLight?: string;
  neutralQuaternaryAlt?: string;
  neutralQuaternary?: string;
  neutralTertiaryAlt?: string;
  neutralTertiary?: string;
  neutralSecondaryAlt?: string;
  neutralSecondary?: string;
  neutralPrimary?: string;
  neutralDark?: string;
  black?: string;
  white?: string;
  primaryBackground?: string;
  primaryText?: string;
  errorText?: string;
  bodyBackground?: string;
  bodyText?: string;
  bodyTextAlt?: string;
  bodyTextDisabled?: string;
  bodyTextHover?: string;
  bodyTextPrimary?: string;
  bodyTextPrimaryAlt?: string;
  bodyTextStrong?: string;
  focusBorder?: string;
  controlText?: string;
  controlBackground?: string;
  controlBackgroundDisabled?: string;
  controlBackgroundHover?: string;
  controlBackgroundSelected?: string;
  controlBackgroundSelectedHover?: string;
  controlForegroundSelected?: string;
  controlForegroundDisabled?: string;
  controlBorder?: string;
  controlBorderDisabled?: string;
  controlBorderHover?: string;
  controlUnfilled?: string;
  controlFilled?: string;
  controlFilledHover?: string;
  commandBarBackground?: string;
  commandBarHover?: string;
  commandBarIcon?: string;
  commandBarIconSelected?: string;
}